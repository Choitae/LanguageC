C1 저녁반, 2일차.

[TODAY] 리터럴, 상수
	표준 입출력 함수
	연산자1 (산술, 대입, 증감, 형 변환)
---------------------------------------------------------------------------
공유폴더 : \\192.168.4.101

상수, 리터럴.
	변수 : 그 값이 변할 수 있어서 변수
		ex) int num = 5;
		    num = 7;
	상수 : 항상 그 값이서 상수
		ex) const double pi = 3.14;
		    pi = 3.141592; // 컴파일에러!
Ex2-7.
-------------------------------------------------------------------------
(복습)	변수의 선언 : "데이터타입 변수이름;"
		(ex) int num;
	변수의 초기화 : 변수에 최초로 값(=초기값)을 대입.
		(ex) num = 0;
	변수의 선언과 동시에 초기화 : 
		(ex) int num = 0;
----------------------------------------------------------------------
상수
1)	const 키워드 사용
2)	#define에 정의

----------------------------------------------------------------------
printf()와 scanf()

- printf("출력할 내용");
	  -- \n, \t
	  -- %d, %f, %c, %s : 형식지정자(format specifier) --> 4가지는 기억.
				%d : 정수
				%f : 실수
				%c : 한 문자
				%s : 문자열
Ex3-1.c
Ex3-2.c
Q201.c	"입력된 정수에 대응되는 아스키코드 문자를 출력하는 코드"
	1. 처리조건 : 자연수 n을 입력받아 입력된 값에 해당하는 아스키코드의
	              문자를 출력.
	2. 입력 : 첫 줄에 아스키코드로 변환할 자연수 n을 입력받음.
		  (n이 32 이상 126 이하라고 가정)
	3. 출력 : 첫 번째 줄에는 입력된 숫자를 출력,
		  두 번째 줄에는 아스키코드로 화면에 출력.
	(실행결과) 입력 : 66 (엔터)
		   출력 : 66
			  B
				HINT. scanf() --> 정수로 입력(char형 변수).
				      printf() --> %d로 출력하면 정수,
						   %c로 출력하면 문자가 출력.

Q202.c 	한 문자를 입력받아(char형 변수) 그에 해당하는 아스키코드값을 출력.


Q(고급)	※ 반복문
	  for(int i=1; i<=5; i++) {
	     printf("%d ", i);   
	  }
          // 1 2 3 4 5 

	(플로이드의 삼각형)
	n 입력 : 6 (엔터) ----------> 여섯 줄의 플로이드 삼각형을 출력.
	1 
	2 3 
	4 5 6 
	7 8 9 10 
	11 12 13 14 15 
	16 17 18 19 20 21 

Ex3-5.c	여러 개의 값을 한번에 scanf().

※ getchar(), putchar(), getch(), putch(), gets(), puts() -- Ex3-7~9.
				 	CppProgramming2020@gmail.com으로 요청.

--------------------------------------------------------------------
연산자.

1. 산술연산자 : + - * / %
				(ex) 5 % 3 --> 2
				(ex) 5 / 3 --> 1
				     5.0 / 3.0 --> 1.666667
	/ (나눗셈 연산자)
		1) 정수형 나눗셈(몫)
		2) 실수형 나눗셈
				(ex) 5 / 3.0 ---> 5.0 / 3.0 --> 1.666667
  				(ex) 5.0 / 3 ---> 5.0 / 3.0 --> 1.666667
	--> "자동 형 변환" : 연산자는 동일한 데이터타입 간에만 실행가능함.
				타입이 다른 데이터 간에는 연산자 실행이 
				불가능. ---> 단, '정보의 소실'이 없는 상황
				이라면 자동 형 변환하여 타입을 자동으로 일치
				시켜준 후 연산자 실행됨.

-------------------------------------------------------------------
대입연산자(=) : 오른쪽을 정리해서 왼쪽에...

산술+대입연산자 : += -= *= /= %=
		(ex)
	=	a = 1;	
	+=	a += 2;   -->  a = a + 2;	// 3
	-=	a -= 4;	  -->  a = a - 4;	// -1
	*=	a *= 7;   -->  a = a * 7;	// -7
	/=	a /= 3;   -->  a = a / 3;	// -2
	%=	a %= 5;   -->  a = a % 5;	// -2
		printf("%d", a); // -2 
Ex4-2.c : int a = 10;
	  a += 10;
	  printf("%d", a);  // 20	

------------------------------------------------------
증감연산자(++,--)		--> 변수가 가지고 있는 값을 변경:
(ex)	int a = 5;			1) 대입연산자 왼쪽에 변수를.
	a++;				2) 증감연산자.
	++a;
	printf("%d", a);  // 7
	a--;
	--a;
	printf("%d", a);  // 5
Ex4-5.c

형 변환 연산자.
Ex4-9.c
		(ex) 일관성이 없음!!
		double d = 3.14;
		printf("%lf", d);   // 3.140000
		printf("%f", d);    // 3.140000
		scanf("%lf", &d);   // 3.14 (엔터) --> 3.14
		scanf("%f", &d);    // 3.14 (엔터) --> 문제...
		--> %lf : double			















