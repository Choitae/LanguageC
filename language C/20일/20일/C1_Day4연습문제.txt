4일차 연습문제.

※ 한 문자의 입력:
	1) #define _CRT_SECURE_NO_WARNINGS
	   char ch;
	   scanf("%c", &ch);
	2) char ch;
	   scanf_s("%c", &ch, 1);

문제1. 한 문자를 입력받고, 알파벳인지 아닌지를 출력.
	(실행결과) 입력 : a (엔터)
		 입력한 건 알파벳임.
	(실행결과) 입력 : 5 (엔터)
		 입력한 건 알파벳이 아님.

문제2. 1바이트 정수를 하나 입력받고, 
         (1) 이 정수의 LSB(Least Significant Bit)가 1인지 0인지를 출력.
         (2) 이 정수의 MSB(Most SIgnificant BIt)가 1인지 0인지를 출력.

문제3. 1바이트 정수를 하나 입력받고,
         8개의 비트 중 1은 몇 개이고 0은 몇 개인지 출력.

문제4. 1바이트 정수를 하나 입력받고,
         8개의 비트와 입력된 정수를 출력하고,
         (MSB를 첫 번째 비트라 할 때) 3번째 비트와 4번째 비트를 각각을 1로 변경, 
         변경된 결과값을 (8개의 비트와 10진수 정수로) 출력.
         (실행결과) 1바이트 정수 입력 : 5 (엔터)
   	          0 0 0 0 0 1 0 1 (5)
	          0 0 1 1 0 1 0 1 (53)

문제5. 1바이트 정수를 하나 입력받고,
         정수 n을 입력받아, 2진수를 오른쪽으로 n번 로테이트한 결과를 출력.
         (실행결과) 1바이트 정수 입력 : 5 (엔터)
	         n 입력 : 4 (엔터)
	         0 1 0 1 0 0 0 0 (80)

문제6. 정수 2개를 입력받고,
         XOR(^) 비트연산자를 사용해서 두 값을 swap. 
	HINT. num1과 num2가 비트로 볼 때 다른 비트를 체크. 이 체크한 걸 1로 놓으면, 이게 바로 XOR연산(=변수 num_x에 저장).
         	        이제, num1과 num2 각각에 대해 num_x의 비트가 1이면 해당 비트를 변경(이게 바로 XOR연산. 0^1-->1 , 1^1-->0)

문제7. 정수 1개를 입력받고,
         이 값이 짝수인지 홀수인지를 비트연산자를 사용해서 판단하여 출력.
         확인: (-)값을 입력해도 될까요? (-)값을 2진수로 나타내어 체크.

문제8. 다음의 코드를 while문을 사용하는 방식으로 변경해보세요. (메모장 사용)
	for (int i = 9; i >=1; i--) {
		if (i % 2 != 0)
			printf("%d ", i);
	}

문제9. 다음의 코드를 do-while문을 사용하는 방식으로 변경해보세요. (메모장 사용)
	char str[10] = "Hello!";

	for (int i=0; str[i]!=0; i++) {
		printf("%c", str[i]);
	}

문제10. 별 패턴 / 문자 패턴 출력.
문제10-1.입력 : 4 (엔터)
	*	A		  (고급)	A
	**	AB				BC
	***	ABC				DEF
	****	ABCD				GHIJ

문제10-2.
	****	ABCD		  (고급)	ABCD
	***	ABC				EFG
	**	AB				HI
	*	A				J

문제10-3.
	****	ABCD		  (고급)   	ABCD
	 ***	 ABC			 	 EFG
	  **	  AB			   	  HI
	   *	   A			    	   J

문제10-4.
	   *	   A		  (고급)        A
	  **	  AB			       BC
	 ***	 ABC			      DEF
	****	ABCD			     GHIJ		

문제10-5.
	*	A
	* *	A B
	* * *	A B C
	* * * *	A B C D

문제10-6.
	   *	        a
	  ***	       abc
	 *****	      abcde
	*******	     abcdefg





